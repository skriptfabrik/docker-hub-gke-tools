#!/usr/bin/env sh

set -e

if [ -f "$1" ]; then
    GOOGLE_APPLICATION_CREDENTIALS=$1
else
    GOOGLE_APPLICATION_CREDENTIALS_HOME=~/.config/gcloud-credentials
    GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS_HOME}/service-account.json

    if [ ! -f "${GOOGLE_APPLICATION_CREDENTIALS}" ]; then
        if [ -z "${GKE_SERVICE_ACCOUNT_KEY}" ]; then
            cat <<EOT
Service account key missing!
Provide the key ...
... using the environment variable GKE_SERVICE_ACCOUNT_KEY
... storing the file at ${GOOGLE_APPLICATION_CREDENTIALS}
... setting the path as first argument
EOT
            exit 128;
        fi

        mkdir -p ${GOOGLE_APPLICATION_CREDENTIALS_HOME}
        echo "${GKE_SERVICE_ACCOUNT_KEY}" | base64 -d > ${GOOGLE_APPLICATION_CREDENTIALS}
    fi
fi

if [ -z "${GKE_CLUSTER_NAME}" ]; then
    cat <<EOT
Cluster name missing!
Provide the cluster name using the environment variable GKE_CLUSTER_NAME
EOT
    exit 128;
fi

if [ -n "${GKE_REGION}" ]; then
    GKE_LOCATION_OPTION="--region ${GKE_REGION}";
elif [ -n "${GKE_ZONE}" ]; then
    GKE_LOCATION_OPTION="--zone ${GKE_ZONE}";
else
    cat <<EOT
Cluster region or zone missing!
Provide either the region using the environment variable GKE_REGION or the zone using the environment variable GKE_ZONE
EOT
    exit 128;
fi

# Read service account name from service account key json
GKE_SERVICE_ACCOUNT_NAME=$(jq -r .client_email "${GOOGLE_APPLICATION_CREDENTIALS}")
GKE_SERVICE_ACCOUNT_NAME="${GKE_SERVICE_ACCOUNT_NAME%\"}"
GKE_SERVICE_ACCOUNT_NAME="${GKE_SERVICE_ACCOUNT_NAME#\"}"

# Read project id from service account key json
GKE_PROJECT_ID=$(jq -r .project_id "${GOOGLE_APPLICATION_CREDENTIALS}")
GKE_PROJECT_ID="${GKE_PROJECT_ID%\"}"
GKE_PROJECT_ID="${GKE_PROJECT_ID#\"}"

# Export Google application credentials for later use
export GOOGLE_APPLICATION_CREDENTIALS

echo "Activating service account"
gcloud auth activate-service-account --key-file=${GOOGLE_APPLICATION_CREDENTIALS} "${GKE_SERVICE_ACCOUNT_NAME}"

echo "Updating Kubernetes configuration"
gcloud container clusters get-credentials "${GKE_CLUSTER_NAME}" --project "${GKE_PROJECT_ID}" ${GKE_LOCATION_OPTION}
